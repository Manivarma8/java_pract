1) REMOVE DUPLICATE FROM AN COLLECTION
-----------------------------------
public class Collect {  
 static void showcaseCollectionsUsage() {  

	//create array list and add with some lists
	 List a = new ArrayList();
	 a.add("Manivarman");
	 a.add("Manivarman");
	 a.add(1);
	 a.add(1);
	 
	 //create hashset and eliminate the duplicate
	 Set s = new HashSet();
	 s.addAll(a);
	 
	 System.out.println(s);
 }  
 public static void main(String[] args) {  
     showcaseCollectionsUsage();  
 }  
}  
_____________________________________________________________________________________________________________________

2)Count the frequency of the words from the String 
public class Collect {  
 static void showcaseCollectionsUsage() {  

//	 Create the ArrayList in String 
	 List <String> L = new ArrayList();
	 L.addAll(Arrays.asList("manivarman", "Vijay","manivarman", "Vijay","manivarman", "Vijay", "Sri"));
	 Map <String, Integer> map = new HashMap();
	 for(String g : L) {
		 if(L.contains(g)) {
			 map.put(g, map.getOrDefault(g, 0)+1);
		 }
	 }
	 System.out.println(map);
	 
 }  
 public static void main(String[] args) {  
     showcaseCollectionsUsage();  
 }  
}  
_________________________________________________________________________________________________________________________
3)ASCENDING ORDER
public class Collect {  
 static void showcaseCollectionsUsage() {  

	 
	 //create an ArrayList 
	 List <Integer> V= new ArrayList();
	 V.addAll(Arrays.asList(11,10,3,33,22,9,89));
	 for(int i = 0; i < V.size()-1; i++) {
		for(int j = i + 1; j < V.size(); j++) {
			int temp = 0;
			if(V.get(i) > V.get(j)) {
				temp = V.get(j);
				V.set(j, V.get(i));
				V.set(i, temp);
				
			}
			
		}
	 }
	 System.out.println(V);
 }  
 public static void main(String[] args) {  
     showcaseCollectionsUsage();  
 }  
}  
------------------------------------------------------------------------------------------------
