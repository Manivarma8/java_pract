1) Converting String into Perfect case

public class Array1 {
	 public static void main(String[] args) {
	 perfectCase("vIJAY");
	}
	 static String perfectCase(String mani) {
	 char v; char[] t;
 char vijay = mani.charAt(0);
 if(vijay >= 'a' && vijay <= 'z') {
	 v = (char) (vijay - 32);
 System.out.print(v);
 }
 else {
	 v = (char)(vijay-0);
	 System.out.print(v);
 }
 for(int i = 1; i < mani.length(); i++) {
	t = mani.toCharArray();
	if(t[i] >= 'A' && t[i] <='Z') {
	v = (char)(t[i] + 32);
	 System.out.print(v);}
	
 else {
	 v = (char)(t[i] - 0);
	 System.out.print(v);
 }}
return mani;
 }
	 
	 }
---------------------------------------------------------------------------------------------------------
2) Upper case to lower case
public class Array {
	

	public static void main(String[] args) {
		upperCase("manivarmaN vijay surendRan");
	}

	public static String upperCase(String string) {
		
		for(int i = 0; i < string.length();i++) {
			char check =string.charAt(i);
			char v;

			if(check >= 'a' && check <= 'z' ){
			 v = (char) (check - 32);
			System.out.print(v);
		}
			else if(check == ' ') {
			System.out.print(check = ' ');	
			}
		else if(check >= 'A' && check <= 'Z') {
			 v = (char) (check - 0);
			System.out.print(v);
		}
	
		}
		return string;
	}

}
--------------------------------------------------------------------------------
3)capital to small letter

public class Array {
	

	public static void main(String[] args) {
		upperCase("manivarmaN vijay surendRan");
	}

	public static String upperCase(String string) {
		
		for(int i = 0; i < string.length();i++) {
			char check =string.charAt(i);
			char v;

			if(check >= 'A' && check <= 'Z' ){
			 v = (char) (check + 32);
			System.out.print(v);
		}
			else if(check == ' ') {
			System.out.print(check = ' ');	
			}
		else if(check >= 'a' && check <= 'z') {
			 v = (char) (check - 0);
			System.out.print(v);
		}
		
	
		}
		return string;
	}

}

-------------------------------------------------------------------------------------------------------------------------------
replaceAll();
public class Array {
    public static void main(String[] args) {
        String line = "Love is the rhythm, the art and the rhythm poem.";
        String target = "rhythm";
        String replacement = "beat";
        String result = "";
        for (int i = 0; i < line.length(); i++) {
            boolean match = true;
    for (int j = 0; j < target.length(); j++) {
    if ( line.charAt(i+j) != target.charAt(j)) {
                    match = false;
                    break;
                }
            }
            if (match) {
                result += replacement;
                i += target.length() - 1; 
            } else {
                result += line.charAt(i);
            }
        }
        System.out.println(result);
    	
    	
    	
    }
}

------++++++-+---------+++------++++-++++++


PALINDROME METHOD
--------------------------------------------------------------------------------------------------
public class Palindrome {
    public static void main(String[] args) {
        String valid = "nun";
        char[] chars = valid.toCharArray();
        char[] reversedChars = new char[chars.length];
        
        for (int i = chars.length - 1; i >= 0; i--) {
            reversedChars[chars.length - 1 - i] = chars[i];
        }
        
        boolean isPalindrome = true;
        for (int i = 0; i < chars.length; i++) {
            if (chars[i] != reversedChars[i]) {
                isPalindrome = false;
                break;
            }
        }
        
        System.out.print("Reversed String: ");
        for (char c : reversedChars) {
            System.out.print(c);
        }
        System.out.println();
        
        if (isPalindrome) {
            System.out.println("The string is a palindrome.");
        } else {
            System.out.println("The string is not a palindrome.");
        }
    }

}



REPLACE A STRING
--------------------------------------------------------------------------------------------------
Type 1
public class ReplaceString {
    static String sentence = "Hi Good Morning";
    static String exist = "Hi";
    static String modify = "AfterNoon";
    static String replace = "";

    public static void main(String[] args) {
        char[] fish = sentence.toCharArray();  
        char[] exists = exist.toCharArray();  
        char[] change = modify.toCharArray(); 

        for (int i = 0; i < fish.length; i++) {
            // Check if the current character matches the start of the word "Good"
            if (i <= fish.length - exists.length && fish[i] == exists[0]) {
                // Check if the whole word "Good" is present here
                boolean found = true;
                for (int j = 0; j < exists.length; j++) {
                    if (fish[i + j] != exists[j]) {
                        found = false;
                        break;
                    }
                }
                if (found) {
                    for (int k = 0; k < change.length; k++) {
                        replace += change[k];
                    }
                    i += exists.length - 1; // Skip the length of "Good"
                } else {
                    replace += fish[i];  
                }
            } else {
                replace += fish[i];  // If not starting with "Good", just copy the character
            }
        }

        System.out.println(replace);  // Output the final replaced sentence

    }
}
-----------------------------------------------------------------------------------------------
Type 2
public class ReplaceString {
    static String sentence = "Hi Good Morning";
    static String exist = "Good";
    static String modify = "Happy";
    static String replace = "";
    static boolean check = true;

    public static void main(String[] args) {
        char[] fish = sentence.toCharArray();  // Convert the sentence into a character array
        char[] change = modify.toCharArray();  // Convert the word to replace with into a character array
        char[] exists = exist.toCharArray();   // Convert the word to be replaced into a character array

        int i = 0;
        while (i < fish.length) {
            check = true;

            // Check if the substring exists[i] starts at position i
            int k = 0;
            while (k < exists.length && i + k < fish.length && exists[k] == fish[i + k]) {
                k++;
            }

            if (k == exists.length) {
                // If the word "Good" is found, replace it with "Happy"
                for (int j = 0; j < change.length; j++) {
                    replace += change[j];
                }
                i += exists.length; // Skip the length of the word "Good"
            } else {
                // If the current character does not match the word, add it to the result
                replace += fish[i];
                i++;
            }
        }

        System.out.println(replace);
    }
}

------------------------------------------------------------------------------------------------
REMOVEALL

public class RemoveAll
{ 
 static boolean match; 
 public static void main(String[] args) { 
      
  String phrase = "love is art then art"; 
  String target = "artt"; 
  for(int i=0;i<phrase.length();i++)  
  { 
   match = true;  
    for(int j=0;j<target.length();j++)  
    { 
     if(phrase.charAt(i+j)!=target.charAt(j) && phrase.charAt(i+j)!="") 
     { 
     match = false;
     break; 
     } 
    } 
   if(match) 
    break; 
  } 
  if(match) 
   System.out.println("present"); 
  else 
   System.out.println("not present"); 
  
  } 
 
}
-----------------------------------------------------------------------------------------------
STARTWITH
public class StartsWith {
public static void main(String[] args) {
String s1 = "Stay happy and focused";
String s2 = "stay";
char[] c1 = s1.toCharArray();
char[] c2 = s2.toCharArray();
boolean starts = true;
int j=0;
for(int i=0; j<c2.length; i++) {
if(c1[i]==c2[j]) {
  j++;
continue;
}
else {
starts=false;
System.out.println("Not starts with");
break;
}
}
if(starts) {
System.out.println("Starts with");
}
}
}
â€“--------------+-----+++-+--++++--++++++-
CONTAINS PROGRAM
public class Program
{
    public static void main(String[] args) {
      String m = "manivarmaaaaan";
      int h = 0;
      //char[] f = m.toCharArray();
      char v = 'a';
      boolean g = false;
      int count =0;
      int i = 0;
      while( i <= m.length()-1){
          
          if(m.charAt(i) == v){
              g = true;
              count++;
               h = i;
         System.out.print("index no :" + h);
         System.out.println();
          }
  i++;
      }
      if(g){
System.out.println("contains : " + count);
      }
      else{
          System.out.println("not contains");
      }
    }
}

-_----------------++++++---+---+--+++-+_-----++++

ANAGRAM
class HelloWorld {
    public static void main(String[] args) {
     String m = "Hi good morning";
     String  v = "ig";
     String u = "";
     boolean k = false;
 for(int i = 0; i <= m.length()-
 v.length(); i++){
     u = "";
  for(int j = 0; j < v.length(); j++){
      
          u += m.charAt(i+j);
          
      }
      if(u.equals(v)){
          k = true;
          break;
      }
      else{
          k = false;
      }
     }
     
   if(k){
       System.out.print("exist");
   }
   else{
       System.out.print("not exist");
   }
     
     
     
    }
}
---------------------------------------------------------------------------------------------
Swaping two String
// Online Java Compiler
// Use this editor to write, compile and run your Java code online
public class HelloWorld {
    public static void main(String[] args) {
        String s1 = "meean";
        String s2 = "kulambu";
        
        s1= s1 + s2; 
        
     
        s2 = s1.replace(s2, "");
        
        s1 = s1.replace(s2, "");  
        
        System.out.println("s1 = " + s1);
        System.out.println("s2 = " + s2);
    }
}

------------------------------------------------------
Swapping two strings
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        String s1 = "Meen";
        String s2 = "kulambu";
        System.out.println( "s1  -->" +s1);
          System.out.println( "s2  -->" +s2);
        s1 = s1.concat(s2);
        //meenkulambu
    s2 = s1.substring(0, s1.length() - s2.length());
    s1 = s1.substring(s2.length(), s1.length());
          System.out.println( "s1  -->" +s1);
          System.out.println( "s2  -->" +s2);
    }
}

-----------------------------------------------------------------
